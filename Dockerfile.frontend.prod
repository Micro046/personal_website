# Build stage
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (use npm install to avoid lock file issues)
RUN npm install --omit=dev --legacy-peer-deps

# Clear any cached builds
RUN rm -rf build/

# Copy source code
COPY . .

# Build the app (with cache busting)
RUN echo "Build timestamp: $(date)" && npm run build

# Production stage
FROM nginx:alpine

# Copy built app
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
